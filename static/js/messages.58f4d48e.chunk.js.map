{"version":3,"sources":["libs/utils.js","components/MessagePreview/index.jsx","components/MessagePreview/MessagePreview.module.scss","pages/Messages/Messages.module.scss","pages/Messages/index.jsx"],"names":["formatDateAgo","data","formatDistance","Date","addSuffix","locale","it","MessagePreview","props","text","date","sender","className","styles","message","module","exports","Messages","useState","messages","setMessages","useEffect","http","then","map","index"],"mappings":"qHACA,sDAIMA,EAAgB,SAACC,GAEnB,OAAOC,YAAe,IAAIC,KAAKF,GAAO,IAAIE,KAAQ,CAC9CC,WAAW,EACXC,OAAQC,Q,gCCRhB,2CAuBeC,UApBQ,SAACC,GACtB,IAAMP,EAAOO,EAAMP,MAAQ,CACzBQ,KAAM,cACNC,KAAM,IAAIP,KACVQ,OAAQ,QAGV,OACE,sBAAKC,UAAWC,IAAOC,QAAvB,UACE,6BAAKb,EAAKU,SACV,4BACE,gCACGX,YAAcC,EAAKS,UAGxB,4BAAIT,EAAKQ,Y,mBClBfM,EAAOC,QAAU,CAAC,QAAU,kC,mBCA5BD,EAAOC,QAAU,CAAC,SAAW,6B,iGCwBdC,UAnBE,WAEb,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAMA,OAJAC,qBAAU,WACNC,YAAK,aAAaC,MAAK,SAACtB,GAAD,OAAUmB,EAAYnB,QAC9C,IAGC,qBAAKW,UAAWC,IAAOI,SAAvB,SACI,gCACKE,EAASK,KAAI,SAACV,EAASW,GAAV,OACV,cAAC,UAAD,CAA4BxB,KAAMa,GAAbW","file":"static/js/messages.58f4d48e.chunk.js","sourcesContent":["\nimport { formatDistance } from 'date-fns';\nimport { it } from 'date-fns/locale';\n\n\nconst formatDateAgo = (data) => \n{\n    return formatDistance(new Date(data), new Date(), {\n        addSuffix: true,\n        locale: it,\n    });\n}\n\nconst greetings = (name = 'User') =>\n{\n    return `Hello dear ${name}`;\n}\n\nconst doFetch = () => fetch('https://jsonplaceholder.typicode.com/todos/1').then((response) => response.json());\n\n\n\nexport {\n    formatDateAgo,\n    greetings,\n    doFetch\n};","\nimport styles from \"./MessagePreview.module.scss\";\nimport { formatDateAgo } from \"../../libs/utils\";\n\nconst MessagePreview = (props) => {\n  const data = props.data || {\n    text: \"lorem ipsum\",\n    date: new Date(),\n    sender: \"User\",\n  };\n\n  return (\n    <div className={styles.message}>\n      <h5>{data.sender}</h5>\n      <p>\n        <small>\n          {formatDateAgo(data.date)}\n        </small>\n      </p>\n      <p>{data.text}</p>\n    </div>\n  );\n};\n\nexport default MessagePreview;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessagePreview_message__3j9dl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Messages\":\"Messages_Messages__3lm0z\"};","\nimport { useState, useEffect } from 'react';\nimport { http } from   './../../libs/http';\nimport MessagePreview from '../../components/MessagePreview';\nimport styles from './Messages.module.scss';\n\nconst Messages = () =>\n{\n    const [messages, setMessages] = useState([]);\n\n    useEffect(() => {\n        http('/messages').then((data) => setMessages(data));\n    }, []);\n\n    return (\n        <div className={styles.Messages}>\n            <aside>\n                {messages.map((message, index) => (\n                    <MessagePreview key={index} data={message} />\n                ))}\n            </aside>\n        </div>\n    );\n};\n\nexport default Messages;"],"sourceRoot":""}